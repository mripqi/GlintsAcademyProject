{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/react_project/calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport Button from './componen/Button';\nimport './App.css';\nimport Input from './componen/Input';\nimport ClearButton from './componen/ClearButton';\n\nclass App extends Component {\n  // need to declare it if we want to use state\n  constructor(props) {\n    super(props);\n\n    this.addToInput = val => {\n      // calc cant have 0 on the front\n      if (val == '0' && this.state.input == \"\") {\n        console.log('zero');\n      } else {\n        this.setState({\n          input: this.state.input + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      if (this.state.input.indexOf(\".\") === -1) {\n        if (this.state.input == \"\") {\n          this.setState({\n            input: this.state.input + 0 + val\n          });\n        } else {\n          this.setState({\n            input: this.state.input + val\n          });\n        }\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\"\n      });\n    };\n\n    this.add = val => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n\n      if (val == \"+\") {\n        this.state.operator = \"+\";\n      } else if (val == \"-\") {\n        this.state.operator = \"-\";\n      } else if (val == \"*\") {\n        this.state.operator = \"*\";\n      }\n\n      if (val == \"/\") {\n        this.state.operator = \"/\";\n      }\n    };\n\n    this.equal = () => {\n      this.state.currentNumber = this.state.input;\n\n      if (this.state.operator == \"+\") {\n        this.setState({\n          input: parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"-\") {\n        this.setState({\n          input: parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"*\") {\n        this.setState({\n          input: parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"/\") {\n        this.setState({\n          input: parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber)\n        });\n      }\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\"\n    };\n  } // a function to change state according to input\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wraper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.equal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Clear\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/muhammad/react_project/calculator/src/App.js"],"names":["React","Component","Button","Input","ClearButton","App","constructor","props","addToInput","val","state","input","console","log","setState","addDecimal","indexOf","clearInput","add","previousNumber","operator","equal","currentNumber","parseFloat","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from './componen/Button'\nimport './App.css';\nimport Input from './componen/Input'\nimport ClearButton from './componen/ClearButton'\nclass App extends Component{\n\n  // need to declare it if we want to use state\nconstructor(props){\n  super(props);\n\n  this.state = {\n    input: \"\",\n    previousNumber: \"\",\n    currentNumber: \"\",\n    operator: \"\"\n  };\n}\n\n  // a function to change state according to input\n  addToInput = (val) =>{\n    // calc cant have 0 on the front\n    if(val == '0' && this.state.input == \"\"){\n      console.log('zero')\n    }else{\n      this.setState({input: this.state.input + val});\n    }\n  };\n\n  addDecimal = (val) =>{\n    if(this.state.input.indexOf(\".\")=== -1){\n      if(this.state.input == \"\"){\n        this.setState({input: this.state.input + 0 + val});\n      }else{\n        this.setState({input: this.state.input + val});\n      }\n      \n    }\n  }\n\n  clearInput = () => {\n    this.setState({ input: \"\"})\n  }\n\n  add =(val) =>{\n    this.state.previousNumber = this.state.input;\n    this.setState({input: \"\"})\n    if(val == \"+\"){\n      this.state.operator = \"+\"\n    } else if(val == \"-\"){\n      this.state.operator = \"-\"\n    } else if(val == \"*\"){\n      this.state.operator = \"*\"\n    }if(val == \"/\"){\n      this.state.operator = \"/\"\n    }\n    \n  }\n\n  equal = () =>{\n    this.state.currentNumber = this.state.input\n\n    if(this.state.operator == \"+\"){\n      this.setState({\n          input: parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber)\n      })\n    }else if(this.state.operator == \"-\"){\n      this.setState({\n          input: parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber)\n      })\n    }else if(this.state.operator == \"*\"){\n      this.setState({\n          input: parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber)\n      })\n    } else if(this.state.operator == \"/\"){\n      this.setState({\n          input: parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber)\n      })\n    }\n  }\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wraper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button >/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            {/* 0 cant be the first input so we need a condition */}\n            <Button handleClick={this.addToInput}>0</Button>\n            <Button handleClick={this.equal}>=</Button>\n            <Button>-</Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}